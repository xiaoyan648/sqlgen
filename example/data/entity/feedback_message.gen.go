// Code generated by github.com/go-leo/sqlgen. DO NOT EDIT.
// Code generated by github.com/go-leo/sqlgen. DO NOT EDIT.
// Code generated by github.com/go-leo/sqlgen. DO NOT EDIT.

package entity

import (
	"time"
)

const TableNameFeedbackMessage = "feedback_message"

// FeedbackMessage mapped from table <feedback_message>
type FeedbackMessage struct {
	ID           int64     `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	FeedbackID   int64     `gorm:"column:feedback_id;not null" json:"feedback_id"`                           // 反馈记录ID
	FromUserID   int64     `gorm:"column:from_user_id;not null" json:"from_user_id"`                         // 发送者ID
	FromUserName string    `gorm:"column:from_user_name;not null" json:"from_user_name"`                     // 发送者
	ToUserID     int64     `gorm:"column:to_user_id" json:"to_user_id"`                                      // 接收者ID
	ToUserName   string    `gorm:"column:to_user_name" json:"to_user_name"`                                  // 接收者
	Content      string    `gorm:"column:content" json:"content"`                                            // 消息文本内容
	Media        string    `gorm:"column:media" json:"media"`                                                // 消息多媒体内容
	HasRead      int8      `gorm:"column:has_read;not null" json:"has_read"`                                 // 是否已读
	CreateTime   time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 创建时间
	UpdateTime   time.Time `gorm:"column:update_time;not null;default:CURRENT_TIMESTAMP" json:"update_time"` // 更新时间
}

// TableName FeedbackMessage's table name
func (*FeedbackMessage) TableName() string {
	return TableNameFeedbackMessage
}
